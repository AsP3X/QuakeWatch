name: Build and Release (Manual)

on:
  # Disabled automatic tag-based releases - use PR-based releases instead
  # push:
  #   tags:
  #     - 'v*'
  workflow_dispatch:

env:
  GO_VERSION: '1.24'

jobs:
  test-and-build:
    name: Test and Build Verification
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Verify dependencies
        working-directory: apps/scraper
        run: go mod verify

      - name: Tidy dependencies
        working-directory: apps/scraper
        run: go mod tidy

      - name: Download dependencies
        working-directory: apps/scraper
        run: go mod download

      - name: Run tests
        working-directory: apps/scraper
        run: go test -v ./...

      - name: Build verification
        working-directory: apps/scraper
        run: go build -v ./...

  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    needs: test-and-build
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            bin_name: quakewatch-scraper-linux-amd64
          - os: linux
            arch: arm64
            bin_name: quakewatch-scraper-linux-arm64
          - os: darwin
            arch: amd64
            bin_name: quakewatch-scraper-darwin-amd64
          - os: darwin
            arch: arm64
            bin_name: quakewatch-scraper-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Verify dependencies
        working-directory: apps/scraper
        run: go mod verify

      - name: Tidy dependencies
        working-directory: apps/scraper
        run: go mod tidy

      - name: Download dependencies
        working-directory: apps/scraper
        run: go mod download

      - name: Build binary
        working-directory: apps/scraper
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o bin/${{ matrix.bin_name }} cmd/scraper/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.bin_name }}
          path: apps/scraper/bin/${{ matrix.bin_name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: List downloaded files
        run: |
          echo "Downloaded files:"
          find dist/ -type f -name "*" | sort

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 